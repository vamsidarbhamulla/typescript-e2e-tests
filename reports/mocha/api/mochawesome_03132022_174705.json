{
  "stats": {
    "suites": 13,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-13T17:46:58.648Z",
    "end": "2022-03-13T17:47:05.936Z",
    "duration": 7288,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1017d32c-85df-4f66-8f4f-ec8b1de6439f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fd2ed351-9d2f-4f96-b122-b796e143d24f",
          "title": "Verify POST Login api endpoint",
          "fullFile": "/tests/api/auth/post.loginUser.api.spec.ts",
          "file": "/api/auth/post.loginUser.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch login token",
              "fullTitle": "Verify POST Login api endpoint should fetch login token",
              "timedOut": false,
              "duration": 519,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var loginUser, loginResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        loginUser = {\n                            email: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.loginUserApiRequest)(loginUser)];\n                    case 1:\n                        loginResponse = _a.sent();\n                        softExpect(loginResponse.status).to.be.eql(200);\n                        softExpect(loginResponse.data.token).to.be.not.undefined;\n                        (0, soft_assert_1.flush)();\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "8796c94b-da19-469a-b1b5-4695f08e6ad9",
              "parentUUID": "fd2ed351-9d2f-4f96-b122-b796e143d24f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8796c94b-da19-469a-b1b5-4695f08e6ad9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 519,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "39fb3fea-e803-4393-9383-508daff054cc",
          "title": "Verify HTTP DELETE method by using delete user api endpoint",
          "fullFile": "/tests/api/httpMethods/delete.deleteUser.api.spec.ts",
          "file": "/api/httpMethods/delete.deleteUser.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should delete an existing user using delete http method",
              "fullTitle": "Verify HTTP DELETE method by using delete user api endpoint should delete an existing user using delete http method",
              "timedOut": false,
              "duration": 759,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var authCreds, allUsersPageResponse, allUsersList, id, deleteUserResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authCreds = {\n                            username: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(authCreds)];\n                    case 1:\n                        allUsersPageResponse = _a.sent();\n                        softExpect(allUsersPageResponse).to.be.not.undefined;\n                        allUsersList = allUsersPageResponse.data.data;\n                        id = allUsersList[0].id;\n                        return [4 /*yield*/, (0, apiUtil_1.deleteApiRequest)(\"\".concat(apiUtil_1.userEndpoint, \"/\").concat(id), authCreds)];\n                    case 2:\n                        deleteUserResponse = _a.sent();\n                        softExpect(deleteUserResponse.status).to.be.eql(204);\n                        softExpect(deleteUserResponse.data).to.be.eql('');\n                        (0, soft_assert_1.flush)();\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "3fdbea23-3b81-42b1-ad4e-7b2c1d2ede00",
              "parentUUID": "39fb3fea-e803-4393-9383-508daff054cc",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3fdbea23-3b81-42b1-ad4e-7b2c1d2ede00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 759,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "a6da2905-aec8-49b1-bc54-012e1d9d44e7",
          "title": "Verify HTTP GET using get all users api endpoint",
          "fullFile": "/tests/api/httpMethods/get.getUsers.api.spec.ts",
          "file": "/api/httpMethods/get.getUsers.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch all the available users with auth login token",
              "fullTitle": "Verify HTTP GET using get all users api endpoint should fetch all the available users with auth login token",
              "timedOut": false,
              "duration": 862,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var loginResponse, allUsersPageResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, (0, apiUtil_1.loginUserApiRequest)({\n                            email: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        })];\n                    case 1:\n                        loginResponse = _a.sent();\n                        return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(loginResponse.data.token)];\n                    case 2:\n                        allUsersPageResponse = _a.sent();\n                        verifyGetUsers(allUsersPageResponse);\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "90b9fde9-427e-4f28-a815-b3f8fd33a323",
              "parentUUID": "a6da2905-aec8-49b1-bc54-012e1d9d44e7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should fetch all the available users with basic auth",
              "fullTitle": "Verify HTTP GET using get all users api endpoint should fetch all the available users with basic auth",
              "timedOut": false,
              "duration": 227,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var authCreds, allUsersPageResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authCreds = {\n                            username: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(authCreds)];\n                    case 1:\n                        allUsersPageResponse = _a.sent();\n                        verifyGetUsers(allUsersPageResponse);\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "0bed5dd9-2623-4fe5-a42e-8857cbbb88a1",
              "parentUUID": "a6da2905-aec8-49b1-bc54-012e1d9d44e7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90b9fde9-427e-4f28-a815-b3f8fd33a323",
            "0bed5dd9-2623-4fe5-a42e-8857cbbb88a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1089,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0a15969b-ca1c-42d2-a6ae-da0c7a6a690b",
          "title": "Verify HTTP PATCH by updating user api endpoint",
          "fullFile": "/tests/api/httpMethods/patch.updateUser.api.spec.ts",
          "file": "/api/httpMethods/patch.updateUser.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should update an existing user using patch http method",
              "fullTitle": "Verify HTTP PATCH by updating user api endpoint should update an existing user using patch http method",
              "timedOut": false,
              "duration": 774,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var authCreds, allUsersPageResponse, allUsersList, _a, name, oldJob, newJob, patchData, updateUserResponse, today;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        authCreds = {\n                            username: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(authCreds)];\n                    case 1:\n                        allUsersPageResponse = _b.sent();\n                        allUsersList = allUsersPageResponse.data.data;\n                        _a = allUsersList[1], name = _a.name, oldJob = _a.job;\n                        newJob = 'software developer';\n                        patchData = {\n                            name: name,\n                            job: newJob\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.patchApiRequest)(apiUtil_1.userEndpoint, patchData, authCreds)];\n                    case 2:\n                        updateUserResponse = _b.sent();\n                        softExpect(updateUserResponse.status).to.be.eql(200);\n                        softExpect(updateUserResponse.data).to.be.not.undefined;\n                        softExpect(updateUserResponse.data.updatedAt).to.be.not.undefined;\n                        softExpect(updateUserResponse.data.name).to.be.eql(name);\n                        softExpect(updateUserResponse.data.job).to.be.not.eql(oldJob);\n                        softExpect(updateUserResponse.data.job).to.be.eql(newJob);\n                        today = \"\".concat(new Date().toISOString()).split('T')[0];\n                        softExpect(updateUserResponse.data.updatedAt).to.contains(today);\n                        (0, soft_assert_1.flush)();\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "0afd01e1-54f8-4a12-8ed9-2c285daeea40",
              "parentUUID": "0a15969b-ca1c-42d2-a6ae-da0c7a6a690b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0afd01e1-54f8-4a12-8ed9-2c285daeea40"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "a8da6b96-55f8-4078-9037-35a1e192096b",
          "title": "Verify HTTP POST create user api endpoint",
          "fullFile": "/tests/api/httpMethods/post.createUser.api.spec.ts",
          "file": "/api/httpMethods/post.createUser.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch token for successful login",
              "fullTitle": "Verify HTTP POST create user api endpoint should fetch token for successful login",
              "timedOut": false,
              "duration": 349,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var authCreds, name, job, postData, createUserResponse, today;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authCreds = {\n                            username: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        name = (0, core_1.newUserData)().name;\n                        job = 'leader';\n                        postData = {\n                            name: name,\n                            job: job\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.postApiRequest)(apiUtil_1.userEndpoint, postData, authCreds)];\n                    case 1:\n                        createUserResponse = _a.sent();\n                        softExpect(createUserResponse.status).to.be.eql(201);\n                        softExpect(createUserResponse.data).to.be.not.undefined;\n                        softExpect(createUserResponse.data.id).to.be.not.undefined;\n                        softExpect(createUserResponse.data.createdAt).to.be.not.undefined;\n                        softExpect(createUserResponse.data.name).to.be.eql(name);\n                        softExpect(createUserResponse.data.job).to.be.eql(job);\n                        today = \"\".concat(new Date().toISOString()).split('T')[0];\n                        softExpect(createUserResponse.data.createdAt).to.contains(today);\n                        (0, soft_assert_1.flush)();\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "c26b5787-0908-47d4-a344-e4dc0535bdca",
              "parentUUID": "a8da6b96-55f8-4078-9037-35a1e192096b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c26b5787-0908-47d4-a344-e4dc0535bdca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "b8c83278-4b32-4d88-b507-699e64e00052",
          "title": "Verify HTTP POST register user api endpoint",
          "fullFile": "/tests/api/httpMethods/post.registerUser.api.spec.ts",
          "file": "/api/httpMethods/post.registerUser.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should receive error message for unsuccessful registration",
              "fullTitle": "Verify HTTP POST register user api endpoint should receive error message for unsuccessful registration",
              "timedOut": false,
              "duration": 418,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var authCreds, email, postData, registerUserResponse;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        authCreds = {\n                            username: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        email = (0, core_1.newUserData)().email;\n                        postData = {\n                            email: email\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.postApiRequest)(apiUtil_1.registerEndpoint, postData, authCreds)];\n                    case 1:\n                        registerUserResponse = _a.sent();\n                        softExpect(registerUserResponse.status).to.be.eql(400);\n                        softExpect(registerUserResponse.data).to.be.not.undefined;\n                        softExpect(registerUserResponse.data.error).to.be.not.undefined;\n                        softExpect(registerUserResponse.data.error).to.be.eql('Missing password');\n                        (0, soft_assert_1.flush)();\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "a21e0b57-c4e2-42de-bd74-242afa521604",
              "parentUUID": "b8c83278-4b32-4d88-b507-699e64e00052",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a21e0b57-c4e2-42de-bd74-242afa521604"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 418,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "2ed16f2f-eff9-4190-ba50-2fb119171f35",
          "title": "Verify HTTP PUT method by updating update user api endpoint",
          "fullFile": "/tests/api/httpMethods/put.updateUser.api.spec.ts",
          "file": "/api/httpMethods/put.updateUser.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should update an existing user using put http method",
              "fullTitle": "Verify HTTP PUT method by updating update user api endpoint should update an existing user using put http method",
              "timedOut": false,
              "duration": 636,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(void 0, void 0, void 0, function () {\n            var authCreds, allUsersPageResponse, allUsersList, _a, name, oldJob, newJob, putData, updateUserResponse, today;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        authCreds = {\n                            username: 'eve.holt@reqres.in',\n                            password: 'cityslicka'\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(authCreds)];\n                    case 1:\n                        allUsersPageResponse = _b.sent();\n                        allUsersList = allUsersPageResponse.data.data;\n                        _a = allUsersList[0], name = _a.name, oldJob = _a.job;\n                        newJob = 'software developer';\n                        putData = {\n                            name: name,\n                            job: newJob\n                        };\n                        return [4 /*yield*/, (0, apiUtil_1.putApiRequest)(apiUtil_1.userEndpoint, putData, authCreds)];\n                    case 2:\n                        updateUserResponse = _b.sent();\n                        /* eslint-enable */\n                        softExpect(updateUserResponse.status).to.be.eql(200);\n                        softExpect(updateUserResponse.data).to.be.not.undefined;\n                        softExpect(updateUserResponse.data.updatedAt).to.be.not.undefined;\n                        softExpect(updateUserResponse.data.name).to.be.eql(name);\n                        softExpect(updateUserResponse.data.job).to.be.not.eql(oldJob);\n                        softExpect(updateUserResponse.data.job).to.be.eql(newJob);\n                        today = \"\".concat(new Date().toISOString()).split('T')[0];\n                        softExpect(updateUserResponse.data.updatedAt).to.contains(today);\n                        (0, soft_assert_1.flush)();\n                        return [2 /*return*/];\n                }\n            });\n        });",
              "err": {},
              "uuid": "3aa1c7f3-4100-455b-8e25-157078962d6c",
              "parentUUID": "2ed16f2f-eff9-4190-ba50-2fb119171f35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3aa1c7f3-4100-455b-8e25-157078962d6c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 636,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "8827ffdc-0e5f-472c-a93d-974466185e4b",
          "title": "Verify HTTP Status",
          "fullFile": "/tests/api/httpStatus/httpStatus.api.spec.ts",
          "file": "/api/httpStatus/httpStatus.api.spec.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "42dec451-0ddc-44d5-99b1-0016c159a41f",
              "title": "Verify 200 HTTP Status",
              "fullFile": "/tests/api/httpStatus/httpStatus.api.spec.ts",
              "file": "/api/httpStatus/httpStatus.api.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should fetch all the available users with auth login token",
                  "fullTitle": "Verify HTTP Status Verify 200 HTTP Status should fetch all the available users with auth login token",
                  "timedOut": false,
                  "duration": 642,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var loginResponse, allUsersPageResponse;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, (0, apiUtil_1.loginUserApiRequest)({\n                                email: 'eve.holt@reqres.in',\n                                password: 'cityslicka'\n                            })];\n                        case 1:\n                            loginResponse = _a.sent();\n                            return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(loginResponse.data.token)];\n                        case 2:\n                            allUsersPageResponse = _a.sent();\n                            (0, chai_1.expect)(allUsersPageResponse.status).to.be.eq(200);\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "5274e798-a78c-4dcb-b1ec-13738b5b8b50",
                  "parentUUID": "42dec451-0ddc-44d5-99b1-0016c159a41f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5274e798-a78c-4dcb-b1ec-13738b5b8b50"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 642,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "14ad590a-256b-4233-83fb-0d5c1b47cb34",
              "title": "Verify 201 HTTP Status",
              "fullFile": "/tests/api/httpStatus/httpStatus.api.spec.ts",
              "file": "/api/httpStatus/httpStatus.api.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should create new user",
                  "fullTitle": "Verify HTTP Status Verify 201 HTTP Status should create new user",
                  "timedOut": false,
                  "duration": 438,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var authCreds, name, job, postData, createUserResponse;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            authCreds = {\n                                username: 'eve.holt@reqres.in',\n                                password: 'cityslicka'\n                            };\n                            name = (0, core_1.newUserData)().name;\n                            job = 'leader';\n                            postData = {\n                                name: name,\n                                job: job\n                            };\n                            return [4 /*yield*/, (0, apiUtil_1.postApiRequest)(apiUtil_1.userEndpoint, postData, authCreds)];\n                        case 1:\n                            createUserResponse = _a.sent();\n                            (0, chai_1.expect)(createUserResponse.status).to.be.eql(201);\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "3f6d3034-d001-42c5-b0f8-cd9d586a9085",
                  "parentUUID": "14ad590a-256b-4233-83fb-0d5c1b47cb34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3f6d3034-d001-42c5-b0f8-cd9d586a9085"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 438,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "f1560dac-0761-4cd9-a57e-de1f55b64b51",
              "title": "Verify 204 HTTP Status",
              "fullFile": "/tests/api/httpStatus/httpStatus.api.spec.ts",
              "file": "/api/httpStatus/httpStatus.api.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should delete an existing user using delete http method",
                  "fullTitle": "Verify HTTP Status Verify 204 HTTP Status should delete an existing user using delete http method",
                  "timedOut": false,
                  "duration": 786,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var authCreds, allUsersPageResponse, allUsersList, id, deleteUserResponse;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            authCreds = {\n                                username: 'eve.holt@reqres.in',\n                                password: 'cityslicka'\n                            };\n                            return [4 /*yield*/, (0, apiUtil_1.getAllUsersApiRequest)(authCreds)];\n                        case 1:\n                            allUsersPageResponse = _a.sent();\n                            (0, chai_1.expect)(allUsersPageResponse.status).to.be.eql(200);\n                            allUsersList = allUsersPageResponse.data.data;\n                            id = allUsersList[0].id;\n                            return [4 /*yield*/, (0, apiUtil_1.deleteApiRequest)(\"\".concat(apiUtil_1.userEndpoint, \"/\").concat(id), authCreds)];\n                        case 2:\n                            deleteUserResponse = _a.sent();\n                            (0, chai_1.expect)(deleteUserResponse.status).to.be.eql(204);\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "1c1de399-1193-48f3-b3db-ab6bb6cfe0ee",
                  "parentUUID": "f1560dac-0761-4cd9-a57e-de1f55b64b51",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1c1de399-1193-48f3-b3db-ab6bb6cfe0ee"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 786,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "11a6bd96-94b6-4722-b33a-9ce5415a6f06",
              "title": "Verify 400 HTTP Status",
              "fullFile": "/tests/api/httpStatus/httpStatus.api.spec.ts",
              "file": "/api/httpStatus/httpStatus.api.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 400 for an incomplete user json payload request",
                  "fullTitle": "Verify HTTP Status Verify 400 HTTP Status should return 400 for an incomplete user json payload request",
                  "timedOut": false,
                  "duration": 413,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var authCreds, email, postData, registerUserResponse;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            authCreds = {\n                                username: 'eve.holt@reqres.in',\n                                password: 'cityslicka'\n                            };\n                            email = (0, core_1.newUserData)().email;\n                            postData = {\n                                email: email\n                            };\n                            return [4 /*yield*/, (0, apiUtil_1.postApiRequest)(apiUtil_1.registerEndpoint, postData, authCreds)];\n                        case 1:\n                            registerUserResponse = _a.sent();\n                            (0, chai_1.expect)(registerUserResponse.status).to.be.eql(400);\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "6ee15477-a12c-440b-a0a3-e690e09ab60e",
                  "parentUUID": "11a6bd96-94b6-4722-b33a-9ce5415a6f06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ee15477-a12c-440b-a0a3-e690e09ab60e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 413,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "5ab5a6e3-9875-4542-a56d-3ab4c2e3c409",
              "title": "Verify 404 HTTP Status",
              "fullFile": "/tests/api/httpStatus/httpStatus.api.spec.ts",
              "file": "/api/httpStatus/httpStatus.api.spec.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return 404 for an unknown user endpoint",
                  "fullTitle": "Verify HTTP Status Verify 404 HTTP Status should return 404 for an unknown user endpoint",
                  "timedOut": false,
                  "duration": 420,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(void 0, void 0, void 0, function () {\n                var authCreds, id, deleteUserResponse;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            authCreds = {\n                                username: 'eve.holt@reqres.in',\n                                password: 'cityslicka'\n                            };\n                            id = 100;\n                            return [4 /*yield*/, (0, apiUtil_1.getApiRequest)(\"\".concat(apiUtil_1.userEndpoint, \"/\").concat(id), authCreds)];\n                        case 1:\n                            deleteUserResponse = _a.sent();\n                            (0, chai_1.expect)(deleteUserResponse.status).to.be.eql(404);\n                            return [2 /*return*/];\n                    }\n                });\n            });",
                  "err": {},
                  "uuid": "aaf3670e-1954-4c12-ba87-ee66d87c0b9b",
                  "parentUUID": "5ab5a6e3-9875-4542-a56d-3ab4c2e3c409",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaf3670e-1954-4c12-ba87-ee66d87c0b9b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 420,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "./reports/mocha/api",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "5.2.0"
    }
  }
}