{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-13T18:11:44.019Z",
    "end": "2022-03-13T18:12:52.668Z",
    "duration": 68649,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "abaf01d7-9f29-4851-910e-e967497473e3",
      "title": "",
      "fullFile": "cypress/integration/fileUpload.feature",
      "file": "cypress/integration/fileUpload.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a141191b-7d01-4cdc-a489-5fd16f7d7d08",
          "title": "Upload a File",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User uploads an image file successfully",
              "fullTitle": "Upload a File User uploads an image file successfully",
              "timedOut": null,
              "duration": 17085,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "6eabb186-ac84-4204-91f2-e15d3ead828c",
              "parentUUID": "a141191b-7d01-4cdc-a489-5fd16f7d7d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User uploads binary file to see the upload failed",
              "fullTitle": "Upload a File User uploads binary file to see the upload failed",
              "timedOut": null,
              "duration": 12187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2bd9acc1-9a5e-4c80-8349-e0df146fc58a",
              "parentUUID": "a141191b-7d01-4cdc-a489-5fd16f7d7d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User uploads file2.jpeg successfully (example #1)",
              "fullTitle": "Upload a File User uploads file2.jpeg successfully (example #1)",
              "timedOut": null,
              "duration": 13585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "e38bed19-3101-46c4-ad77-79d5d3f353fb",
              "parentUUID": "a141191b-7d01-4cdc-a489-5fd16f7d7d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User uploads file3.pdf successfully (example #2)",
              "fullTitle": "Upload a File User uploads file3.pdf successfully (example #2)",
              "timedOut": null,
              "duration": 12771,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9012c394-0505-486d-910a-c9d156d5c8a2",
              "parentUUID": "a141191b-7d01-4cdc-a489-5fd16f7d7d08",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User uploads file4.txt successfully (example #3)",
              "fullTitle": "Upload a File User uploads file4.txt successfully (example #3)",
              "timedOut": null,
              "duration": 12701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "889ab903-4a02-4926-b8b2-49b9b1941700",
              "parentUUID": "a141191b-7d01-4cdc-a489-5fd16f7d7d08",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6eabb186-ac84-4204-91f2-e15d3ead828c",
            "2bd9acc1-9a5e-4c80-8349-e0df146fc58a",
            "e38bed19-3101-46c4-ad77-79d5d3f353fb",
            "9012c394-0505-486d-910a-c9d156d5c8a2",
            "889ab903-4a02-4926-b8b2-49b9b1941700"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 68329,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "./reports/mocha/ui",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "5.2.0"
    }
  }
}