{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-13T18:27:22.564Z",
    "end": "2022-03-13T18:28:17.477Z",
    "duration": 54913,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b8d9ff65-5234-436b-9b65-c09e86af89cc",
      "title": "",
      "fullFile": "cypress/integration/searchForAnItem.feature",
      "file": "cypress/integration/searchForAnItem.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9b72748a-96be-40a3-a378-024caf9bb1fb",
          "title": "Search for an item",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search available product from navigation-menu",
              "fullTitle": "Search for an item Search available product from navigation-menu",
              "timedOut": null,
              "duration": 12008,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "42f539b2-5d07-473b-a760-05c584a9dacb",
              "parentUUID": "9b72748a-96be-40a3-a378-024caf9bb1fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search unavailable product from navigation-menu",
              "fullTitle": "Search for an item Search unavailable product from navigation-menu",
              "timedOut": null,
              "duration": 8777,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "64d39b9a-c630-4e5a-9774-5209b8de3767",
              "parentUUID": "9b72748a-96be-40a3-a378-024caf9bb1fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search available camera with a keyword (example #1)",
              "fullTitle": "Search for an item Search available camera with a keyword (example #1)",
              "timedOut": null,
              "duration": 12007,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fc08d091-6045-49c4-8083-db36bf98c201",
              "parentUUID": "9b72748a-96be-40a3-a378-024caf9bb1fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search available speaker with a keyword (example #2)",
              "fullTitle": "Search for an item Search available speaker with a keyword (example #2)",
              "timedOut": null,
              "duration": 11699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "569d07d5-3515-409b-a097-ae9d514ca79b",
              "parentUUID": "9b72748a-96be-40a3-a378-024caf9bb1fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search available watch with a keyword (example #3)",
              "fullTitle": "Search for an item Search available watch with a keyword (example #3)",
              "timedOut": null,
              "duration": 9936,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "16fff3f7-109a-4b1b-9d8e-c176910a088c",
              "parentUUID": "9b72748a-96be-40a3-a378-024caf9bb1fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42f539b2-5d07-473b-a760-05c584a9dacb",
            "64d39b9a-c630-4e5a-9774-5209b8de3767",
            "fc08d091-6045-49c4-8083-db36bf98c201",
            "569d07d5-3515-409b-a097-ae9d514ca79b",
            "16fff3f7-109a-4b1b-9d8e-c176910a088c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 54427,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "./reports/mocha/ui",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "5.2.0"
    }
  }
}