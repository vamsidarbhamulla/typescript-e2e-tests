{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-13T19:47:57.769Z",
    "end": "2022-03-13T19:48:46.001Z",
    "duration": 48232,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5b88be33-be59-4e8e-9d2c-5145be07f64d",
      "title": "",
      "fullFile": "cypress/integration/searchForAnItem.feature",
      "file": "cypress/integration/searchForAnItem.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "10e0d6ba-2b3d-4777-a7e8-cf498274a250",
          "title": "Search for an item",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Search available product from navigation-menu",
              "fullTitle": "Search for an item Search available product from navigation-menu",
              "timedOut": null,
              "duration": 9355,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "fc617896-0d83-44f4-a711-fc73a9d9ccc0",
              "parentUUID": "10e0d6ba-2b3d-4777-a7e8-cf498274a250",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search unavailable product from navigation-menu",
              "fullTitle": "Search for an item Search unavailable product from navigation-menu",
              "timedOut": null,
              "duration": 8793,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "abf1e6da-ccea-4a90-8148-78861018b2a6",
              "parentUUID": "10e0d6ba-2b3d-4777-a7e8-cf498274a250",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search available camera with a keyword (example #1)",
              "fullTitle": "Search for an item Search available camera with a keyword (example #1)",
              "timedOut": null,
              "duration": 9906,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "afa43ddd-b4ea-4d76-a1ae-e1de5d322486",
              "parentUUID": "10e0d6ba-2b3d-4777-a7e8-cf498274a250",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search available speaker with a keyword (example #2)",
              "fullTitle": "Search for an item Search available speaker with a keyword (example #2)",
              "timedOut": null,
              "duration": 10933,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "dc378520-57ac-4511-ba25-948b0f3d95c7",
              "parentUUID": "10e0d6ba-2b3d-4777-a7e8-cf498274a250",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Search available watch with a keyword (example #3)",
              "fullTitle": "Search for an item Search available watch with a keyword (example #3)",
              "timedOut": null,
              "duration": 8868,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9b0c1c7b-336b-4a2a-a8b3-8e152690da84",
              "parentUUID": "10e0d6ba-2b3d-4777-a7e8-cf498274a250",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fc617896-0d83-44f4-a711-fc73a9d9ccc0",
            "abf1e6da-ccea-4a90-8148-78861018b2a6",
            "afa43ddd-b4ea-4d76-a1ae-e1de5d322486",
            "dc378520-57ac-4511-ba25-948b0f3d95c7",
            "9b0c1c7b-336b-4a2a-a8b3-8e152690da84"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47855,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "./reports/mocha/ui",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "mmddyyyy_HHMMss"
      },
      "version": "5.2.0"
    }
  }
}